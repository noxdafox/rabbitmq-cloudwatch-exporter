name: build
on: [push, pull_request]
env:
  SERVER_FOLDER: rabbitmq-server
  PLUGIN_FOLDER: rabbitmq-server/deps/rabbitmq-cloudwatch-exporter
jobs:
  build:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        PLATFORM:
          - { RMQREF: "v3.13.x", ERLVER: "26.2", ELXVER: "1.16" }
          - { RMQREF: "v4.0.x", ERLVER: "26.2", ELXVER: "1.16" }
          - { RMQREF: "v4.1.x", ERLVER: "27", ELXVER: "1.18" }
    name: "Broker: ${{ matrix.PLATFORM.RMQREF }} - Erlang: ${{ matrix.PLATFORM.ERLVER }} - Elixir: ${{ matrix.PLATFORM.ELXVER }}"
    steps:
      - name: Checkout RabbitMQ Server
        uses: actions/checkout@v4
        with:
          repository: rabbitmq/rabbitmq-server
          path: ${{ env.SERVER_FOLDER }}
      - name: Checkout Plugin
        uses: actions/checkout@v4
        with:
          path: ${{ env.PLUGIN_FOLDER }}
      - name: Install Erlang and Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ matrix.PLATFORM.ERLVER }}
          elixir-version: ${{ matrix.PLATFORM.ELXVER }}
      - name: Build distribution files
        working-directory: ${{ env.PLUGIN_FOLDER }}
        run: |
          make dist RABBITMQ_VERSION=${{ matrix.PLATFORM.RMQREF }} MIX_ENV=prod DIST_AS_EZS=yes
      - name: Store build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: plugins-rmq${{ matrix.PLATFORM.RMQREF }}-erl${{ matrix.PLATFORM.ERLVER }}-elx${{ matrix.PLATFORM.ELXVER }}
          path: |
            ${{ env.PLUGIN_FOLDER }}/plugins/elixir-${{ matrix.PLATFORM.ELXVER }}.*.ez
            ${{ env.PLUGIN_FOLDER }}/plugins/rabbitmq_cloudwatch_exporter-[0-9].*.ez
            # Dependencies
            ${{ env.PLUGIN_FOLDER }}/plugins/brotli-*.ez
            ${{ env.PLUGIN_FOLDER }}/plugins/castore-*.ez
            ${{ env.PLUGIN_FOLDER }}/plugins/certifi-*.ez
            ${{ env.PLUGIN_FOLDER }}/plugins/configparser_ex-*.ez
            ${{ env.PLUGIN_FOLDER }}/plugins/decimal-*.ez
            ${{ env.PLUGIN_FOLDER }}/plugins/eex-*.ez
            ${{ env.PLUGIN_FOLDER }}/plugins/ex_aws-*.ez
            ${{ env.PLUGIN_FOLDER }}/plugins/ex_aws_cloudwatch-*.ez
            ${{ env.PLUGIN_FOLDER }}/plugins/ezstd-*.ez
            ${{ env.PLUGIN_FOLDER }}/plugins/finch-*.ez
            ${{ env.PLUGIN_FOLDER }}/plugins/hackney-*.ez
            ${{ env.PLUGIN_FOLDER }}/plugins/hpax-*.ez
            ${{ env.PLUGIN_FOLDER }}/plugins/idna-*.ez
            ${{ env.PLUGIN_FOLDER }}/plugins/jason-*.ez
            ${{ env.PLUGIN_FOLDER }}/plugins/jsx-*.ez
            ${{ env.PLUGIN_FOLDER }}/plugins/logger-*.ez
            ${{ env.PLUGIN_FOLDER }}/plugins/metrics-*.ez
            ${{ env.PLUGIN_FOLDER }}/plugins/mime-*.ez
            ${{ env.PLUGIN_FOLDER }}/plugins/mint-*.ez
            ${{ env.PLUGIN_FOLDER }}/plugins/mimerl-*.ez
            ${{ env.PLUGIN_FOLDER }}/plugins/nimble_csv-*.ez
            ${{ env.PLUGIN_FOLDER }}/plugins/nimble_pool-*.ez
            ${{ env.PLUGIN_FOLDER }}/plugins/nimble_options-*.ez
            ${{ env.PLUGIN_FOLDER }}/plugins/parse_trans-*.ez
            ${{ env.PLUGIN_FOLDER }}/plugins/plug-*.ez
            ${{ env.PLUGIN_FOLDER }}/plugins/plug_crypto*.ez
            ${{ env.PLUGIN_FOLDER }}/plugins/req-*.ez
            ${{ env.PLUGIN_FOLDER }}/plugins/singleton-*.ez
            ${{ env.PLUGIN_FOLDER }}/plugins/ssl_verify_fun-*.ez
            ${{ env.PLUGIN_FOLDER }}/plugins/sweet_xml-*.ez
            ${{ env.PLUGIN_FOLDER }}/plugins/telemetry-*.ez
            ${{ env.PLUGIN_FOLDER }}/plugins/unicode_util_compat-*.ez
